# text_summarizer.py

import nltk
import heapq
import re

# Download required nltk data
nltk.download('punkt')
nltk.download('stopwords')

from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize, sent_tokenize

def summarize_text(text, num_sentences=3):
    # Clean the text
    text = re.sub(r'\s+', ' ', text)
    text = re.sub(r'\[[0-9]*\]', ' ', text)
    
    # Tokenize into sentences
    sentences = sent_tokenize(text)
    
    # Create a word frequency table
    stop_words = set(stopwords.words("english"))
    word_frequencies = {}
    for word in word_tokenize(text.lower()):
        if word not in stop_words and word.isalnum():
            if word not in word_frequencies:
                word_frequencies[word] = 1
            else:
                word_frequencies[word] += 1

    # Calculate sentence scores
    sentence_scores = {}
    for sent in sentences:
        for word in word_tokenize(sent.lower()):
            if word in word_frequencies:
                if len(sent.split(' ')) < 30:
                    if sent not in sentence_scores:
                        sentence_scores[sent] = word_frequencies[word]
                    else:
                        sentence_scores[sent] += word_frequencies[word]

    # Get the top N sentences
    summary_sentences = heapq.nlargest(num_sentences, sentence_scores, key=sentence_scores.get)
    summary = ' '.join(summary_sentences)
    
    return summary


# Example usage
if __name__ == "__main__":
    print("===== TEXT SUMMARIZATION TOOL =====\n")
    input_text = input("Enter or paste your article text:\n\n")
    
    summary_result = summarize_text(input_text, num_sentences=3)
    
    print("\n===== SUMMARY =====\n")
    print(summary_result)
